trigger:
  batch: true
  branches:
    include:
      - master

resources:
  - repo: self

parameters:
  - name: BRANCH_NAME
    type: string
    default: 'master'
  - name: IMAGE_TAG
    type: string
    default: 'latest'

stages:
  - stage: Maven_Stage
    displayName: Maven Stage
    jobs:
      - job: Maven_Stage
        displayName: Maven Stage
        pool:
          name: Default
        steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                . "$(Build.SourcesDirectory)/powershell-scripts/buildService.ps1"
                createJarFile -Path "$(Build.SourcesDirectory)/store-usersubscription-example"
            displayName: 'UserSubscription Jar Build'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                . "$(Build.SourcesDirectory)/powershell-scripts/buildService.ps1"
                createJarFile -Path "$(Build.SourcesDirectory)/store-videogame-products-example"
            displayName: 'VideogameProducts Jar Build'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                . "$(Build.SourcesDirectory)/powershell-scripts/buildService.ps1"
                createJarFile -Path "$(Build.SourcesDirectory)/store-videogamestore-final-example"
            displayName: 'VideogameStore Jar Build'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)/store-usersubscription-example/target/usersubscription.jar'
              artifact: 'usersubscription.jar'
            displayName: 'Publish Artifact UserSubscription'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)/store-videogame-products-example/target/videogamestore.jar'
              artifact: 'videogamestore.jar'
            displayName: 'Publish Artifact VideogameProducts'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.SourcesDirectory)/store-videogamestore-final-example/target/videogamestore.jar'
              artifact: 'videogamestore.jar'
            displayName: 'Publish Artifact VideogameStore'
  - stage: Build_and_Push_Stage
    displayName: Docker Stage
    jobs:
      - job: Build
        displayName: Docker Stage
        pool:
          name: Default
        steps:
          - script: |
              docker version
            displayName: 'Check Docker version'
          - task: DownloadBuildArtifacts@1
            displayName: Download JAR UserSubscription
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'usersubscription.jar'
              downloadPath: '$(Build.SourcesDirectory)/store-usersubscription-example/target/'
          - task: DownloadBuildArtifacts@1
            displayName: Download JAR VideogameProducts
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'videogamestore.jar'
              downloadPath: '$(Build.SourcesDirectory)/store-videogame-products-example/target/'
          - task: DownloadBuildArtifacts@1
            displayName: Download JAR VideogameStore
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'videogamestore.jar'
              downloadPath: '$(Build.SourcesDirectory)/store-videogamestore-final-example/target/'
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerHub'
              command: 'login'
              displayName: 'Docker Login'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                . "$(Build.SourcesDirectory)/powershell-scripts/buildService.ps1"
                buildAndPushOnDocker -Path "$(Build.SourcesDirectory)/store-usersubscription-example" -ImageName "usersubscription" -ImageTag "${IMAGE_TAG}"
            displayName: 'Build and Push UserSubscription'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                . "$(Build.SourcesDirectory)/powershell-scripts/buildService.ps1"
                buildAndPushOnDocker -Path "$(Build.SourcesDirectory)/store-videogame-products-example" -ImageName "videogameproducts" -ImageTag "${IMAGE_TAG}"
            displayName: 'Build and Push Videogame Products'
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                . "$(Build.SourcesDirectory)/powershell-scripts/buildService.ps1"
                buildAndPushOnDocker -Path "$(Build.SourcesDirectory)/store-videogamestore-final-example" -ImageName "videogamestore" -ImageTag "${IMAGE_TAG}"
            displayName: 'Build and Push Videogame Store'
          - task: Docker@2
            inputs:
              command: 'logout'




